# Generated by Django 3.0.1 on 2020-01-08 21:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeStart', models.DateTimeField()),
                ('timeEnd', models.DateTimeField()),
                ('isEnded', models.BooleanField(default=False)),
                ('conversation_id', models.UUIDField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateStart', models.DateTimeField()),
                ('content', models.TextField()),
                ('topic_id', models.UUIDField(editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isOnline', models.BooleanField(default=True)),
                ('isBanned', models.BooleanField(default=False)),
                ('isLooking', models.BooleanField(default=False)),
                ('userID', models.UUIDField(editable=False)),
                ('topics', models.ManyToManyField(related_name='users', to='bgapp.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='UserOpinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeStart', models.DateTimeField()),
                ('timeEnd', models.DateTimeField()),
                ('isDeleted', models.BooleanField(default=False)),
                ('position', models.BooleanField()),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='opinions', to='bgapp.Topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='opinions', to='bgapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserComplaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeFiled', models.DateTimeField()),
                ('complaintCode', models.CharField(default='', max_length=5)),
                ('complaint', models.TextField()),
                ('accused', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complaints_received', to='bgapp.User')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complaints', to='bgapp.Conversation')),
                ('filedBy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='complaints_made', to='bgapp.User')),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='userStarted',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='topics_started', to='bgapp.User'),
        ),
        migrations.CreateModel(
            name='SessionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(null=True)),
                ('timeStart', models.DateTimeField()),
                ('timeEnd', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='login_sessions', to='bgapp.User')),
            ],
            options={
                'ordering': ['-timeStart'],
            },
        ),
        migrations.CreateModel(
            name='ProCamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_count', models.IntegerField(default=0)),
                ('topic', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='pro_camp', to='bgapp.Topic')),
                ('users', models.ManyToManyField(related_name='pro_camps', to='bgapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeSent', models.DateTimeField()),
                ('content', models.TextField()),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='messages', to='bgapp.Conversation')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receivedMessages', to='bgapp.User')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sentMessages', to='bgapp.User')),
            ],
            options={
                'ordering': ['-timeSent'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewed', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=40)),
                ('feedback', models.TextField()),
                ('user', models.ManyToManyField(related_name='feedbacks', to='bgapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('detail', models.TextField()),
                ('type', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='errors', to='bgapp.User')),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversations', to='bgapp.Topic'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='users',
            field=models.ManyToManyField(related_name='conversations', to='bgapp.User'),
        ),
        migrations.CreateModel(
            name='ConCamp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_count', models.IntegerField(default=0)),
                ('topic', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='con_camp', to='bgapp.Topic')),
                ('users', models.ManyToManyField(related_name='con_camps', to='bgapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
                ('banType', models.CharField(max_length=5)),
                ('banCode', models.CharField(default='', max_length=5)),
                ('reason', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bans', to='bgapp.User')),
            ],
            options={
                'ordering': ['-endTime'],
            },
        ),
    ]
